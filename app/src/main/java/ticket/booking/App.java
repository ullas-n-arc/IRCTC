/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.UserBookingService;
import ticket.booking.util.UserServiceUtil;

import java.util.*;


public class App {

    public static void main(String[] args) {
        System.out.println("Running  Train Booking System");
        Scanner sc =new Scanner(System.in);
        int option=0;
        UserBookingService userBookingService;

        try{
            userBookingService=new UserBookingService();

        }
        catch(Exception e){
            e.printStackTrace();
            return;
        }
        while(option!=7){
            System.out.println("Choose option");
            System.out.println("1.Sign up");
            System.out.println("2.login");
            System.out.println("3.Fetch Booking");
            System.out.println("4.Search Trains");
            System.out.println("5.Book a Seat");
            System.out.println("6.Cancel my Booking");
            System.out.println("7.Exit the app");
            option=sc.nextInt();
            Train trainSelectedForBooking = new Train();
            switch (option){
                case 1:
                    System.out.println("Enter Name:");
                    String userName=sc.nextLine();
                    System.out.println("Enter password");
                    String pass=sc.nextLine();
                    User userToSignUp=new User(userName,pass, UserServiceUtil.hashPassword(pass),new ArrayList<>(),UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignUp);
                    break;
                case 2:
                    System.out.println("Enter the username to Login");
                    String nameToLogin = sc.next();
                    System.out.println("Enter the password to signup");
                    String passwordToLogin = sc.next();
                    User userToLogin = new User(nameToLogin, passwordToLogin, UserServiceUtil.hashPassword(passwordToLogin), new ArrayList<>(), UUID.randomUUID().toString());
                    try{
                        userBookingService = new UserBookingService(userToLogin);
                    }catch (Exception e){
                        e.printStackTrace();
                        return;
                    }
                    break;
                case 3:
                    System.out.println("Fetching your bookings...");
                    userBookingService.fetchBookings();
                    break;
                case 4:
                    System.out.println("Enter Source");
                    String src=sc.nextLine();
                    System.out.println("Enter Destination");
                    String dest=sc.nextLine();
                    List<Train> trains =userBookingService.getTrains(src,dest);
                    int index = 1;
                    for (Train t: trains){
                        System.out.println(index+" Train id : "+t.getTrainId());
                        for (Map.Entry<String, String> entry: t.getStationTimes().entrySet()){
                            System.out.println("station "+entry.getKey()+" time: "+entry.getValue());
                        }
                    }
                    System.out.println("Select a train by typing 1,2,3...");
                    trainSelectedForBooking = trains.get(sc.nextInt());
                    break;
                case 5:
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for (List<Integer> row: seats){
                        for (Integer val: row){
                            System.out.print(val+" ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by typing the row and column");
                    System.out.println("Enter the row");
                    int row = sc.nextInt();
                    System.out.println("Enter the column");
                    int col = sc.nextInt();
                    System.out.println("Booking your seat....");
                    Boolean booked = userBookingService.bookTrainSeat(trainSelectedForBooking, row, col);
                    if(booked.equals(Boolean.TRUE)){
                        System.out.println("Booked! Enjoy your journey");
                    }else{
                        System.out.println("Can't book this seat");
                    }
                case 6:
                    System.out.println("Please enter the ticket ID you wish to cancel:");
                    String ticketIdToCancel = sc.next();
                    boolean wasCancelled = userBookingService.cancelBooking(ticketIdToCancel);
                    if (wasCancelled) {
                        System.out.println("Success! Your booking has been canceled.");
                    } else {
                        System.out.println("Failed. We could not find a ticket with that ID.");
                    }
                    break;
                default:
                    System.out.println("Enter Valid option");

                    break;

            }
        }
    }
}
